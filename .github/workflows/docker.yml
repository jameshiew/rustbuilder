name: Build Docker images

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: "Tag for the image"
      rust_version:
        required: true
        description: "The Rust version to use"
        default: "1.67.1"
  schedule:
    - cron: 30 12 * * TUE
  push:
    branches:
      - main
    paths:
      - .github/workflows/docker.yml
      - Dockerfile
      - config.toml

env:
  IMAGE_NAME: rustbuilder
  IMAGE_TAG: "${{ github.sha }}"
  RUST_VERSION: "1.67.1"

jobs:
  override-envvars:
    runs-on: ubuntu-22.04
    outputs:
      IMAGE_TAG: ${{ steps.set_outputs.outputs.IMAGE_TAG }}
    steps:
      - if: github.event_name == 'workflow_dispatch'
        name: Set envvars from input
        run: |
          echo "IMAGE_TAG=${{ inputs.tag }}" >> $GITHUB_ENV
          echo "RUST_VERSION=${{ inputs.rust_version }}" >> $GITHUB_ENV
      - if: github.event_name == 'schedule'
        name: Set envvars from date
        run: |
          echo "IMAGE_TAG=${{ env.IMAGE_TAG }}-$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Forward IMAGE_TAG to later jobs
        id: set_outputs
        run: |
          echo "IMAGE_TAG=${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT
          echo "RUST_VERSION=${{ env.RUST_VERSION }}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-22.04
    needs:
      - override-envvars
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    steps:
      - run: |
          echo "IMAGE=${{secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ needs.override-envvars.outputs.IMAGE_TAG }}" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: |
          docker build \
            --build-arg RUST_VERSION=${{ needs.override-envvars.outputs.RUST_VERSION }} \
            --platform linux/${{ matrix.arch }} \
            -t $IMAGE-${{ matrix.arch }} \
            .
      - run: docker push $IMAGE-${{ matrix.arch }}

  push-multiarch-manifest:
    runs-on: ubuntu-22.04
    needs:
      - override-envvars
      - build
    steps:
      - run: |
          echo "IMAGE=${{secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ needs.override-envvars.outputs.IMAGE_TAG }}" >> $GITHUB_ENV
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: |
          docker manifest create $IMAGE \
            --amend $IMAGE-amd64 \
            --amend $IMAGE-arm64
      - run: docker manifest push --purge $IMAGE
